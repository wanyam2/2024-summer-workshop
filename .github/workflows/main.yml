name: github-action-tutorial-2024

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Bun 셋업
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Bun 환경 검증
        run: bun --version

      - name: 테스트 수행
        run: bun test

  deploy:
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - uses: actions/checkout@v4

      - name: Bun 셋업
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Node.js 셋업
        uses: actions/setup-node@v3
        with:
          node-version: '20.16.0'

      - name: Bun 환경 검증
        run: bun --version

      - name: SSH 셋업
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{secrets.SSH_PRIVATE_KEY}}

      - name: SSH 파일 저장
        run: |
          echo "${{secrets.SSH_PRIVATE_KEY}}" > /tmp/new_id
          chmod 600 /tmp/new_id

      - name: Bastion 연결 테스트
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/new_id \
              ${{secrets.SSH_BASTION_USER}}@${{secrets.SSH_BASTION_HOST}} -p 10020 "echo Bastion에 연결 성공"

      - name: 개인 서버에 SSH 프록시 점프로 연결
        run: |
          ssh -J ${{secrets.SSH_BASTION_USER}}@${{secrets.SSH_BASTION_HOST}}:10020 \
              -o StrictHostKeyChecking=no -i /tmp/new_id \
              ${{secrets.SSH_TARGET_USER}}@${{secrets.SSH_TARGET_HOST}} "echo 개인서버에 연결 성공"

      - name: 개인 서버에 파일 복사
        run: |
          scp -J ${{secrets.SSH_BASTION_USER}}@${{secrets.SSH_BASTION_HOST}}:10020 \
              -i /tmp/new_id -r "$GITHUB_WORKSPACE/"* \
              ${{secrets.SSH_TARGET_USER}}@${{secrets.SSH_TARGET_HOST}}:~/app2